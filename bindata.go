// Code generated by go-bindata.
// sources:
// template/api/api.go.tmpl
// template/api/gen_api.go.tmpl
// template/api/paginate.go.tmpl
// template/main.go.tmpl
// template/model/model.go.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiApiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8c\x41\x0a\xc3\x30\x0c\x04\xef\x02\xfd\x61\xc9\xa9\xe9\xa1\x86\xfe\xa0\x25\x1f\x51\x8c\x31\xa6\x38\x16\x8a\x5a\x08\xa5\x7f\x2f\xca\x5e\x16\x76\x99\x49\x09\xb5\x6c\xc5\xc4\x0b\xd6\x03\x35\xd7\x3b\x93\x4a\x7e\x49\x2d\x10\x6d\x4c\x4c\xad\xeb\x30\xc7\x85\x69\xaa\xc3\xfa\xad\x8d\x14\x3d\x31\xcd\x71\xfb\xa1\x05\x0f\x6d\xd8\xdd\xde\xd9\xf1\xfd\xc5\xfa\x11\x0b\x62\x59\x11\xb9\x9e\xe0\xf2\x0c\xb7\x49\xdf\xd1\x36\x67\x9a\xff\x01\x00\x00\xff\xff\x41\xf5\xeb\x28\x7e\x00\x00\x00")

func apiApiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiApiGoTmpl,
		"api/api.go.tmpl",
	)
}

func apiApiGoTmpl() (*asset, error) {
	bytes, err := apiApiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/api.go.tmpl", size: 126, mode: os.FileMode(438), modTime: time.Unix(1631247792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiGen_apiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\xcf\x6e\xd3\x40\x10\xc6\xef\x96\xfc\x0e\xd3\x1c\x2a\x1b\x55\x6b\x84\x2a\x0e\x45\x3e\xb4\x29\x3d\xf0\xa7\x8d\x9a\x22\x0e\x51\x0e\xe3\xcd\xc4\xd9\xc4\xde\x35\xbb\xe3\x02\xb2\xf2\xee\x68\xed\xd0\x50\x68\x48\x84\x48\xd5\xde\x12\xef\xce\x37\x33\xbf\x99\x6f\x93\x04\x72\xd2\x64\x91\x09\xb2\xef\x90\xcb\xfc\x55\x18\x54\x28\x17\x98\x13\x60\xa5\xc2\x20\x0c\x54\x59\x19\xcb\x10\x85\x01\x40\x4f\x13\x27\x33\xe6\xaa\xd7\xfe\xcb\x15\xcf\xea\x4c\x48\x53\x26\x05\x66\x8e\x51\x2e\x12\x92\x33\x93\xdc\x1e\x77\x17\x0a\x93\x77\x3f\x9a\x46\x0c\xac\x99\x93\xe4\x4b\x2c\x69\xb9\x4c\x4a\x33\xa1\xa2\x17\x06\xb1\x4f\x31\xad\xb5\x84\x08\xe1\xc5\x69\xa5\xe2\xa6\xa9\xab\x8a\x6c\x1f\x4b\x2a\x40\xdc\x60\x56\x50\x17\xd3\xb7\x84\x4c\x91\x04\x9f\x42\xf4\x8d\x66\xfa\xc6\x31\x90\xb5\xc6\x42\x13\x06\x26\x9b\xc3\x49\xda\x0a\x8b\x8d\x22\xcd\x32\x0c\xd4\xd4\x07\xc1\x49\x2a\xc5\x99\xd2\x93\xe8\xd0\x64\xf3\xf8\x0d\x59\x7b\x90\x6a\x55\x34\x61\x60\x89\x6b\xab\x41\x8a\x77\xc3\xab\xcb\xc8\xf7\x2b\x86\x8c\x5c\xbb\x33\x9c\x5c\xd3\x97\x9a\x1c\x1f\x79\x09\xf1\xd6\xe7\x8e\xe2\x38\x0c\x96\x3e\xca\xc1\x49\x0a\xe7\x99\x58\x55\xda\xea\xfe\x45\xed\xea\xfd\x11\x58\x72\xe2\xda\x7c\x75\xa7\xd3\x29\x49\xa6\x49\x27\xb5\x2b\x92\x33\x64\x39\xdb\x81\x4b\x5b\x58\x89\x0b\x8a\x46\xe3\x2d\x80\x8e\xe0\x65\xfc\x30\x22\xb7\x2f\x46\x6e\xbf\x90\x3e\x55\x93\x67\xb2\x37\x5d\xa5\xee\x11\x16\xe7\x9c\x0a\x7a\x1e\x4c\x56\x95\xee\x1f\xc9\x07\xe5\xf8\xe9\x02\xf9\x17\x13\xaf\x21\x7e\x9e\x91\x5d\x31\x14\x17\x6b\x3f\xb7\xd5\x7a\x6a\x6d\x2a\x38\x48\x41\xab\xc2\x77\x5b\x98\x5c\x0c\xac\xd2\x5c\xe8\xe8\xee\xfc\xf7\x09\x6d\x9e\xc4\x4a\xfc\x4f\xf8\xb0\xb1\xe2\x01\xe6\xff\x75\x1d\xe1\x1e\xfe\xf6\xe3\xba\xbd\xc7\x1b\xc1\x2d\x5a\x90\xa6\xd6\x0c\x4a\xf3\xeb\xe3\x30\x38\xcf\xc4\x47\x1f\x18\x1d\x6e\xed\x26\x16\x7d\x1f\x19\x1d\xb6\x02\xf7\xe6\x39\x94\xa6\x22\x17\x0d\x30\x57\xba\x7d\xdb\xe2\x78\x1f\x33\x46\x7b\xd7\x6f\x89\xd5\xc8\xb1\x55\x3a\x1f\x2b\xcd\x64\xa7\x28\xa9\x59\xc6\xfe\xce\xa8\xc7\x86\xb1\xe8\x8d\x21\xed\x7a\xed\x3e\x36\xcd\xaf\xed\xb4\xa7\xbe\xa0\x2d\x1e\x46\xfb\x73\x71\x76\xf5\xed\x85\xb2\x4f\xd9\xb8\x0f\x9b\xf0\xc6\x33\x5d\xbd\x69\x7b\xf3\x60\x77\xe9\x47\x00\x00\x00\xff\xff\x21\x81\xb3\xf1\xe4\x09\x00\x00")

func apiGen_apiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiGen_apiGoTmpl,
		"api/gen_api.go.tmpl",
	)
}

func apiGen_apiGoTmpl() (*asset, error) {
	bytes, err := apiGen_apiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/gen_api.go.tmpl", size: 2532, mode: os.FileMode(438), modTime: time.Unix(1648114695, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiPaginateGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xcd\x6a\xeb\x30\x10\x85\xf7\xf3\x14\x83\x56\x52\xb8\x57\x76\xa0\xab\x50\x17\xfa\xb3\x2c\x34\xa5\x0f\x10\x64\x45\xb6\x87\xd4\x96\x91\xc6\x69\x9b\xe0\x77\x2f\x72\x63\x2f\xb2\x28\x5d\xf9\x80\xbf\xf3\xcd\x41\xbd\xb1\x07\x53\x3b\x34\x3d\x01\x50\xdb\xfb\xc0\x28\x41\xd4\xc4\xcd\x50\x6a\xeb\xdb\xec\xdd\x94\x91\x8d\x3d\x64\xce\x36\x3e\x3b\xde\x08\x10\xb5\x0f\xad\x26\x9f\xa5\xaf\x00\x11\x39\x58\xdf\x1d\x05\x28\x80\x6a\xe8\x2c\x6e\x4d\x4d\x9d\x61\x27\x2d\xa6\x92\x7e\xf4\x1d\xbb\x4f\x56\x98\xfe\xca\x7d\x89\xab\xc9\xf0\xf4\xa0\x96\x84\x67\x08\x8e\x87\xd0\xfd\xce\xf4\xa6\x76\xff\x70\x87\x9b\x02\x2f\x57\xf5\x3d\x7b\x92\x56\xbf\x0e\x2e\x7c\x6d\x4d\x30\xad\x14\x89\x12\x4a\x01\x55\x98\x22\x16\x05\xe6\x97\x32\x16\xb8\x86\x11\xa6\xfc\x46\xa7\x3f\xca\x76\x91\x4e\x93\x31\x7e\x10\xdb\x06\xcf\x60\x4d\x74\x38\x4b\xf0\x0e\xd7\x79\xbe\x59\xa4\xe9\x48\x9e\x5f\x31\xb7\x05\x5e\x23\x69\x88\xaf\xaa\xe8\x38\x6d\x90\xd3\xbe\xff\xb8\x56\xb8\x5a\x6a\xf3\xab\xec\x4b\xfd\x32\x91\xf2\xa7\xa0\xf4\x33\xb5\xc4\x72\xe6\x14\x8c\x30\xc2\x77\x00\x00\x00\xff\xff\x92\xb2\x9c\x1b\xce\x01\x00\x00")

func apiPaginateGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiPaginateGoTmpl,
		"api/paginate.go.tmpl",
	)
}

func apiPaginateGoTmpl() (*asset, error) {
	bytes, err := apiPaginateGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/paginate.go.tmpl", size: 462, mode: os.FileMode(438), modTime: time.Unix(1648085323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcf\x6b\x23\x37\x14\xc7\xef\x03\xf3\x3f\x28\x73\x58\x34\x90\xd5\x64\xa1\x27\x83\x0f\x8d\xdd\xd2\xc0\x3a\x36\xeb\x76\x2f\xcb\x52\x64\xcd\x9b\xb1\xba\x1a\x69\x22\xc9\xde\x84\x61\x20\x94\xd2\xd2\x43\x9a\x43\x1a\x02\xa5\x94\x1e\x52\xda\x1e\x9a\xa6\xa5\x94\x12\xfa\xe3\x8f\x69\x6c\x27\xff\x45\xd1\xcc\xc4\x89\x43\xca\x1e\x6c\xcb\x7a\x4f\x9f\xf7\xeb\xfb\x72\xca\x5e\xd1\x14\x50\x46\xb9\xf4\x3d\xdf\xe3\x59\xae\xb4\x45\xd8\xf7\x10\x0a\x8a\x82\x0c\xb4\xfa\x08\x98\xdd\xa6\x19\x94\x65\x44\x73\x1e\xf8\x5e\x90\x72\x3b\x9e\x8c\x08\x53\x59\x24\xe8\xc8\x58\xca\x5e\x45\xc0\xc6\x2a\x9a\xbe\xf5\x06\x73\x94\xf1\x38\x16\xf0\x9a\x6a\x08\x7c\xef\x43\x14\xa4\x4a\x67\x84\xab\x28\xd6\x7c\x0a\x3a\xca\x95\xb1\xa9\x06\x53\x61\x1a\x93\xfb\x6d\x9c\x6f\xc1\xa9\x7a\x6c\x76\xc4\xe3\xe6\x59\xb6\x67\x76\x84\x7b\xa3\x21\x11\xc0\xac\x3b\x5a\x9e\xb9\x18\xa1\xab\x2a\x99\x48\x86\xb8\xe4\x16\x87\x85\xef\xc5\x46\xa2\x56\xbb\x2a\x6f\xa8\x26\x9a\x41\x59\x06\xbe\x37\xa5\x1a\x81\xae\x3e\x4a\xfb\x1e\xcd\x39\xe9\x8e\xd6\xab\xab\x36\xaa\x72\xe9\xe7\x20\x71\x51\x90\x6e\x15\xb4\x2c\xeb\x8b\xd8\xc8\x70\x1d\x3d\xaa\x3c\x3a\x4a\x26\x3c\x2d\xca\xd0\xf7\x78\x52\x3d\x5d\x6b\x23\xc9\x05\x2a\x7c\x2f\xa7\x92\x33\x1c\x24\x94\x0b\x88\x91\x55\x88\x29\x29\x81\x59\x14\x53\x4b\x47\xd4\x40\x10\xfa\x5e\xe9\x7b\x66\x47\x74\x37\xeb\xb8\xad\x36\xaa\xd3\x20\xdd\x4d\x5c\x15\x12\x45\x68\x08\xb6\x47\x77\xb7\x62\x01\x1d\x25\xa5\x41\x57\x67\x7f\x2f\xfe\x3a\x5b\xfc\x78\x71\x7d\xf2\xeb\xd5\x3f\xdf\xcc\xbf\xf8\x6e\xfe\xcb\xb7\x97\x7f\xfc\x54\x9f\x17\x5f\x7d\x32\xff\x7a\x7f\x76\xfa\xfd\xfc\xf8\xfc\xfa\xb3\xc3\x06\x4f\xee\x41\xf0\x93\x8d\x55\xbc\xab\xec\x2e\x7e\xfe\xf9\xd1\xec\xcf\xfd\xf9\xf1\xf9\xfc\xe0\x6c\x76\x71\xf4\x20\xfb\xdf\xfd\x8f\x57\xf1\x4b\x08\x7e\xb2\x71\x97\xef\xee\x7a\x74\xf7\x29\x4f\xc0\x0d\xa9\x09\x71\x79\xf1\x69\x8d\x9d\x1d\xfe\x3c\x3b\x3d\x58\x7c\xf9\xc3\x2d\xff\xe4\xf7\xeb\x93\xdf\x56\xf9\xf7\x20\xd8\x7d\x91\xf7\xd4\x44\xd7\x5d\x6c\x66\xee\x64\x5d\xcd\x3c\x8a\xd0\x3b\x6c\xac\x10\x97\xc6\x52\xc9\xc0\xf7\xc0\xb5\xd7\xc9\x92\x6c\xc3\xeb\x65\x77\x7b\x4b\x7d\xfa\x1e\x90\x0f\x0c\xe0\x5b\xc5\x92\xa7\x2a\x4d\x41\xe3\x30\x7c\xc0\xf6\x0c\x98\x9a\xfe\x9f\xb1\xd3\x7f\x36\xac\x2c\x2e\x46\x47\x65\x99\x92\x48\xab\x89\x05\x6d\x9c\xf7\xa0\x3f\x7c\x1f\x07\x51\xcb\xa5\x2c\x69\x06\xc1\x3a\x72\x47\xcc\x94\xb4\xb0\x6b\xeb\x2c\x3b\xf5\x9f\xb0\x16\x68\x51\x17\xe8\xbc\x5b\xed\xc6\x8f\x0c\xa8\xa6\x19\x0e\x96\x98\xd0\xf7\x32\xb0\x63\x15\xbb\x52\x9b\xd5\x20\xcf\xa9\x98\x40\x3f\xc1\x8f\x9c\xb4\xde\xce\x79\x51\x86\xa4\x57\x79\x6d\xee\xb9\x35\xc7\x37\xcf\x6b\x11\xaf\xd5\x04\xb2\x65\x9e\x53\xc1\x63\x1c\x3a\x2d\x6b\xb0\x13\x2d\x9d\xb2\xab\x66\x83\xd6\xad\x76\xe3\xd7\xa1\x42\xe0\x17\x2f\x57\xa2\x15\xf7\x63\x37\x09\x87\xcd\xa2\xac\x81\xd6\x2f\x36\x5e\x92\x2d\xb3\xcd\x45\x35\xae\x24\xb3\x64\xa0\xb9\xb4\x42\xe2\xda\x58\x8f\x75\x25\xf0\x52\x52\x96\x6a\x8b\x0c\xe8\x29\x68\xd7\xce\x7a\x4c\xe4\x5d\x6a\xa9\xc0\x40\x2a\x33\x0e\x5a\x6e\xdd\x41\x4f\x39\x83\x81\xd2\xb6\x2c\x83\xf0\x46\x2a\xff\x05\x00\x00\xff\xff\x72\xe2\x78\x3a\x05\x05\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 1285, mode: os.FileMode(438), modTime: time.Unix(1647943286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelModelGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xbd\x6a\xc3\x30\x14\x46\x77\x81\xde\xe1\x43\x78\xb0\x4b\xb1\xa1\x63\x20\x93\xa1\xdd\x32\x65\x6f\x14\xfb\x56\xb8\xd5\x1f\xb2\xe4\x62\x84\xde\xbd\x28\x29\x25\x4b\xc7\xfb\x71\xee\xe1\x0c\x03\x14\x59\x0a\x32\xd2\x8c\xeb\x0e\x35\xa9\x17\xce\xbc\x9c\xbe\xa4\x22\x18\x37\x93\xe6\x8c\xb3\xc5\x78\x17\x22\x5a\xce\x00\x11\x17\x43\x82\xb3\x8e\xb3\x4d\x06\xbc\xe3\x88\xba\xf4\x27\xf7\x5d\xd1\xb8\x7b\x42\xce\xc9\x7b\x0a\xa3\x34\xa4\xd1\x9f\xe5\x55\xd3\x49\x1a\x2a\x05\x6b\x0c\x69\x8a\xc8\xd5\x94\x33\x82\xb4\x8a\xd0\x2c\xcf\x68\x36\x1c\x8e\xe8\x47\xa7\x93\xb1\x2b\x4a\xb9\x13\x0f\x9e\x66\xeb\x5f\x17\xd2\x73\x29\xc8\xb9\xd9\xfa\x37\x77\xde\x7d\x75\x5e\x3e\x57\x67\x0f\xe2\x36\xfe\x12\xe2\x02\x0c\xc3\x9d\x1b\x9d\x31\x64\xe3\xed\x8d\xec\x5c\xcd\xa5\x96\x7e\x24\x3b\xa1\xf5\x78\xfa\xb7\xb6\xc3\xdf\xd1\x76\x35\x7d\xb1\xaa\xa6\x07\x8a\x29\x58\x88\x9c\x1f\x69\xc1\x59\xf9\x09\x00\x00\xff\xff\x5e\xb9\x9a\xee\x50\x01\x00\x00")

func modelModelGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelModelGoTmpl,
		"model/model.go.tmpl",
	)
}

func modelModelGoTmpl() (*asset, error) {
	bytes, err := modelModelGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/model.go.tmpl", size: 336, mode: os.FileMode(438), modTime: time.Unix(1648085201, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api/api.go.tmpl":      apiApiGoTmpl,
	"api/gen_api.go.tmpl":  apiGen_apiGoTmpl,
	"api/paginate.go.tmpl": apiPaginateGoTmpl,
	"main.go.tmpl":         mainGoTmpl,
	"model/model.go.tmpl":  modelModelGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api": &bintree{nil, map[string]*bintree{
		"api.go.tmpl":      &bintree{apiApiGoTmpl, map[string]*bintree{}},
		"gen_api.go.tmpl":  &bintree{apiGen_apiGoTmpl, map[string]*bintree{}},
		"paginate.go.tmpl": &bintree{apiPaginateGoTmpl, map[string]*bintree{}},
	}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"model.go.tmpl": &bintree{modelModelGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
