// Code generated by go-bindata.
// sources:
// template/api/api.go.tmpl
// template/api/gen_api.go.tmpl
// template/main.go.tmpl
// template/model/model.go.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiApiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8c\x41\x0a\xc3\x30\x0c\x04\xef\x02\xfd\x61\xc9\xa9\xe9\xa1\x86\xfe\xa0\x25\x1f\x51\x8c\x31\xa6\x38\x16\x8a\x5a\x08\xa5\x7f\x2f\xca\x5e\x16\x76\x99\x49\x09\xb5\x6c\xc5\xc4\x0b\xd6\x03\x35\xd7\x3b\x93\x4a\x7e\x49\x2d\x10\x6d\x4c\x4c\xad\xeb\x30\xc7\x85\x69\xaa\xc3\xfa\xad\x8d\x14\x3d\x31\xcd\x71\xfb\xa1\x05\x0f\x6d\xd8\xdd\xde\xd9\xf1\xfd\xc5\xfa\x11\x0b\x62\x59\x11\xb9\x9e\xe0\xf2\x0c\xb7\x49\xdf\xd1\x36\x67\x9a\xff\x01\x00\x00\xff\xff\x41\xf5\xeb\x28\x7e\x00\x00\x00")

func apiApiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiApiGoTmpl,
		"api/api.go.tmpl",
	)
}

func apiApiGoTmpl() (*asset, error) {
	bytes, err := apiApiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/api.go.tmpl", size: 126, mode: os.FileMode(438), modTime: time.Unix(1631247792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiGen_apiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x93\x4b\x6b\xdc\x30\x10\xc7\xef\x02\x7d\x87\xc9\x1e\x8a\x5d\x16\xb9\x94\x9e\xb6\xf8\x90\xec\x36\xd0\x07\x49\x48\x52\x7a\x28\x3d\x48\xf2\xac\x57\x5e\x59\x72\xa5\x71\x1f\x98\xfd\xee\x45\xb6\x5b\x4a\x69\xfa\x38\x24\x24\x37\x1b\x69\x7e\xf3\xd7\x6f\x98\xa2\x80\x1a\x1d\x06\x49\x08\xea\x2b\xd4\xba\x7e\xca\x59\x27\xf5\x5e\xd6\x08\xb2\x33\x9c\x71\x66\xda\xce\x07\x82\x8c\x33\x80\x85\x43\x2a\x76\x44\xdd\x62\xfc\xab\x0d\xed\x7a\x25\xb4\x6f\x0b\x2b\x55\x24\xa9\xf7\x05\xea\x9d\x2f\x3e\x3d\x9b\x2e\x58\x5f\x4f\x1f\xc3\x20\x2e\x82\x6f\x50\xd3\x99\x6c\xf1\x70\x28\x5a\x5f\xa1\x5d\x70\x96\xa7\x16\xdb\xde\x69\xc8\x24\x3c\x3e\xee\x4c\x3e\x0c\x7d\xd7\x61\x58\xcb\x16\x2d\x88\x6b\xa9\x2c\x4e\x35\xeb\x80\x92\x30\xd3\x90\x5a\x88\xb5\x77\x84\x5f\x28\x07\x0c\xc1\x07\x18\x38\xf3\xaa\x81\x55\x39\x82\xc5\x8d\x90\xe1\xc0\x99\xd9\xa6\x22\x58\x95\x5a\x9c\x18\x57\x65\x8f\xbc\x6a\xf2\xe7\x18\xc2\x51\xe9\x8c\x1d\x38\x0b\x48\x7d\x70\xa0\xc5\xab\xab\xf3\xb3\x2c\xbd\x57\x5c\x91\xa4\x3e\x9e\xc8\xea\x12\x3f\xf6\x18\x69\x99\x10\xe2\x45\xea\x9d\xe5\x39\x67\x87\x54\x15\x61\x55\xc2\x46\x89\x39\xe9\xc8\xfd\x03\xed\xfc\xf5\x12\x02\x46\x71\xe9\x3f\xc7\xe3\xed\x16\x35\x61\x35\xa1\xfe\x55\xc9\xdb\xae\x7a\x20\x4a\xa6\xa4\xf1\x0e\x9c\x6c\xd0\xe2\xc3\x70\x32\x27\x4d\xdc\x25\x78\xd5\x88\x97\x9b\xdb\x55\xf3\xc6\x44\xba\xbf\x62\xbc\x6a\x46\x33\xad\xdc\x63\xf6\xfe\xc3\x5f\x82\x2c\xe1\x49\xfe\xb3\xcc\x77\x3b\x0c\xf3\xca\x89\xd3\xef\xa9\x62\x3e\xa6\x4d\xd6\xc6\x56\x70\x54\x82\x33\x36\xbd\xd6\xfa\x5a\x5c\x04\xe3\xc8\xba\xec\xc7\xf9\xaf\x93\xba\x79\x12\x33\xfc\x3f\xe4\x9f\x9a\x70\x9f\xed\xff\xde\xe4\x75\x9a\xc5\xbc\xb3\xb7\x26\x72\xba\xf4\x2d\x00\x00\xff\xff\x41\x94\x2a\x6d\x8c\x06\x00\x00")

func apiGen_apiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiGen_apiGoTmpl,
		"api/gen_api.go.tmpl",
	)
}

func apiGen_apiGoTmpl() (*asset, error) {
	bytes, err := apiGen_apiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/gen_api.go.tmpl", size: 1676, mode: os.FileMode(438), modTime: time.Unix(1631248102, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xdf\x6b\x2b\x45\x14\xc7\xdf\x07\xe6\x7f\x98\xbb\x0f\x97\x59\xe8\x9d\xed\x05\x9f\x02\x79\xb0\x89\xe2\x85\x9b\x26\xdc\xa8\x2f\x97\x22\x93\xd9\xb3\x9b\xb1\xbb\x33\xdb\xd9\x49\xda\xb2\x2c\x14\x11\xc5\x87\xda\x87\x5a\x0a\x22\xe2\x43\x45\x7d\xb0\x56\x11\x91\xe2\x8f\x3f\xc6\x26\x69\xff\x0b\x99\xdd\x6d\xda\x94\x8a\x0f\x49\x26\x73\xce\x7c\xce\xaf\xef\xc9\xb8\xd8\xe6\x31\x90\x94\x4b\x85\x11\x46\x32\xcd\xb4\xb1\x84\x62\x44\x88\x57\x14\x6c\x60\xf4\x87\x20\xec\x26\x4f\xa1\x2c\x03\x9e\x49\x0f\x23\x2f\x96\x76\x3c\x19\x31\xa1\xd3\x20\xe1\xa3\xdc\x72\xb1\x1d\x80\x18\xeb\x60\xfa\xc6\xff\x98\x83\x54\x86\x61\x02\xbb\xdc\x80\x87\xd1\x07\xc4\x8b\xb5\x49\x99\xd4\x41\x68\xe4\x14\x4c\x90\xe9\xdc\xc6\x06\xf2\x0a\xd3\x98\xdc\x6f\xe3\x7c\x07\x8e\xf5\xb3\x7c\x27\x79\xd6\x3c\x4b\xf7\xf3\x9d\xc4\xbd\x31\x10\x25\x20\xac\x3b\x5a\x99\xba\x18\xbe\xab\x2a\x9a\x28\x41\xa4\x92\x96\xfa\x05\x46\x61\xae\x48\xab\x5d\x95\x37\xd4\x13\x23\xa0\x2c\x3d\x8c\xa6\xdc\x10\x30\xd5\x47\x1b\x8c\x78\x26\x59\x77\xb4\x56\x5d\xb5\x49\x95\x4b\x3f\x03\x45\x8b\x82\x75\xab\xa0\x65\x59\x5f\x84\xb9\xf2\xd7\xc8\xd3\xca\xa3\xa3\x55\x24\xe3\xa2\xf4\x31\x92\x51\xf5\xf4\x49\x9b\x28\x99\x90\x02\xa3\x8c\x2b\x29\xa8\x17\x71\x99\x40\x48\xac\x26\x42\x2b\x05\xc2\x92\x90\x5b\x3e\xe2\x39\x78\x3e\x46\x25\x46\xf9\x4e\xd2\xdd\xa8\xe3\xb6\xda\xa4\x4e\x83\x75\x37\x68\x55\x48\x10\x90\x21\xd8\x1e\xdf\x7b\x11\x26\xd0\xd1\x4a\xe5\xe4\xfa\xfc\xaf\xc5\x9f\xe7\x8b\x1f\x2e\x6f\x4e\x7f\xb9\xfe\xfb\xeb\xf9\xe7\xdf\xce\x7f\xfe\xe6\xea\xf7\x1f\xeb\xf3\xe2\xcb\x8f\xe7\x5f\x1d\xcc\xce\xbe\x9b\x9f\x5c\xdc\x7c\x7a\xd4\xe0\xd9\x03\x08\x7d\xbe\xbe\x8a\x77\x95\xdd\xc7\xcf\x3f\x3b\x9e\xfd\x71\x30\x3f\xb9\x98\x1f\x9e\xcf\x2e\x8f\x1f\x65\xff\x73\xf0\xd1\x2a\x7e\x09\xa1\xcf\xd7\xef\xf3\xdd\x5d\x8f\xef\xbd\x94\x11\xb8\x21\x35\x21\xae\x2e\x3f\xa9\xb1\xb3\xa3\x9f\x66\x67\x87\x8b\x2f\xbe\xbf\xe3\x9f\xfe\x76\x73\xfa\xeb\x2a\xff\x01\x84\xba\x2f\xf6\x8e\x9e\x98\xba\x8b\xcd\xcc\x9d\xac\xab\x99\x07\x01\x79\x4b\x8c\x35\x91\x2a\xb7\x5c\x09\xc0\x08\x5c\x7b\x9d\x2c\xd9\x26\xec\x2e\xbb\xdb\x5b\xea\x13\x23\x60\xef\xe5\x40\xef\x14\xcb\x5e\xea\x38\x06\x43\x7d\xff\x11\xdb\x2b\x10\x7a\xfa\x5f\xc6\x4e\xff\xd5\xb0\xb2\xb8\x18\x1d\x9d\xa6\x5a\x11\xa3\x27\x16\x4c\xee\xbc\x07\xfd\xe1\xbb\xd4\x0b\x5a\x2e\x65\xc5\x53\xf0\xd6\x88\x3b\x52\xa1\x95\x85\x3d\x5b\x67\xd9\xa9\xff\xf8\xb5\x40\x8b\xba\x40\xe7\xdd\x6a\x37\x7e\x6c\xc0\x0d\x4f\xa9\xb7\xc4\xf8\x18\xa5\x60\xc7\x3a\x74\xa5\x36\xab\xc1\xde\xe7\xc9\x04\xfa\x11\x7d\xea\xa4\xf5\x66\x26\x8b\xd2\x67\xbd\xca\x6b\x63\xdf\xad\x39\xbd\x7d\xee\x0a\x31\xa6\xd5\xae\x11\xac\xc3\x93\x84\xbe\xde\x5a\xc1\x14\x0f\xa1\x4d\x26\x7e\xb3\x01\x4f\xc0\x98\xd7\xeb\x5b\xec\x45\xbe\x29\x93\x6a\x0e\x51\x6a\xd9\xc0\x48\x65\x13\x45\x6b\x63\x3d\x2f\x03\x76\x62\x94\xdb\x15\x8c\xca\xa5\x56\x2c\x37\x96\xe4\x60\xa6\x60\x5c\x9f\xea\xfe\xb3\xb7\xb9\xe5\x09\x05\x56\x99\xa9\xd7\x72\x7b\x0c\x66\x2a\x05\x0c\xb4\xb1\x65\xe9\xf9\xb7\x1a\xf8\x37\x00\x00\xff\xff\xcd\x27\xd6\xf0\xde\x04\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 1246, mode: os.FileMode(438), modTime: time.Unix(1631248423, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelModelGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcd\x6a\xc3\x30\x10\x84\xef\x02\xbd\xc3\x20\x7c\xb0\x4b\xb1\xa1\xc7\x40\x4e\x86\xf6\x96\x53\xee\x8d\x6c\x6f\x85\x5b\xeb\x07\x59\x72\x31\x42\xef\x5e\x94\x94\x12\x0a\x39\xee\xec\xec\xb7\x33\x5d\x07\x45\x86\xbc\x0c\x34\x61\xd8\xa1\x46\xf5\xc2\x99\x93\xe3\x97\x54\x04\x6d\x27\x5a\x38\xe3\x6c\xd6\xce\xfa\x80\x9a\x33\x40\x84\x59\x93\xe0\xac\xe1\x6c\x93\x1e\xef\x38\xa2\x28\xed\xc9\x7e\x17\x6b\xd8\x1d\x21\xa5\xe8\x1c\xf9\x5e\x6a\x5a\xd0\x9e\xe5\xb0\xd0\x49\x6a\xca\x19\x6b\xf0\x71\x0c\x48\x85\x94\x12\xbc\x34\x8a\x50\xcd\xcf\xa8\x36\x1c\x8e\x68\x7b\xbb\x44\x6d\x56\xe4\x7c\x73\xdc\x71\xaa\xad\x7d\x9d\x69\x99\x72\x46\x4a\xd5\xd6\xbe\xd9\xf3\xee\x0a\xf3\x32\x0d\x07\x71\x95\x7e\xf7\x02\x9f\xab\x35\xff\xb4\x0b\xd0\x75\xb7\xcb\xde\x6a\x4d\x26\x5c\x41\x64\xa6\xf2\x2b\x97\xec\x1f\xd1\x8c\xa8\x1d\x9e\x1e\xe6\x6f\xf0\x37\xd4\x4d\x29\x33\x1b\x55\xca\x78\x0a\xd1\x1b\x88\x94\xee\xdd\x82\xb3\xfc\x13\x00\x00\xff\xff\x5b\xa6\x14\xd6\x62\x01\x00\x00")

func modelModelGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelModelGoTmpl,
		"model/model.go.tmpl",
	)
}

func modelModelGoTmpl() (*asset, error) {
	bytes, err := modelModelGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/model.go.tmpl", size: 354, mode: os.FileMode(438), modTime: time.Unix(1631248102, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api/api.go.tmpl":     apiApiGoTmpl,
	"api/gen_api.go.tmpl": apiGen_apiGoTmpl,
	"main.go.tmpl":        mainGoTmpl,
	"model/model.go.tmpl": modelModelGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api": &bintree{nil, map[string]*bintree{
		"api.go.tmpl":     &bintree{apiApiGoTmpl, map[string]*bintree{}},
		"gen_api.go.tmpl": &bintree{apiGen_apiGoTmpl, map[string]*bintree{}},
	}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"model.go.tmpl": &bintree{modelModelGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
