// Code generated by go-bindata.
// sources:
// template/api/api.go.tmpl
// template/api/gen_api.go.tmpl
// template/main.go.tmpl
// template/model/model.go.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiApiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x41\x8b\xdb\x30\x10\x85\xef\x02\xfd\x87\xa9\xe8\x41\xc6\xc1\xdb\xf4\x98\xad\x29\x85\xd2\x12\x0a\xdb\x42\x97\x1e\x5a\x7a\x98\xd8\x63\x47\xc4\x91\x55\x69\xe2\x25\x18\xfd\xf7\x22\xdb\x1b\x92\xee\xa1\xe0\x8b\xdf\xbc\xe7\x99\xf9\xc6\x77\x77\xd0\x92\x25\x8f\x4c\xb0\x3b\x43\x5b\xb5\x6f\xa5\x70\x58\x1d\xb0\x25\x40\x67\xa4\x90\xc2\x1c\x5d\xef\x19\xb4\x14\xca\x53\xd3\x51\xc5\x4a\x0a\x15\xd8\x57\xbd\x1d\x94\x14\x59\x32\xf1\xd9\x11\x7c\x70\x06\x02\xfb\x53\xc5\x30\xc6\xa4\x4a\xd1\x9c\x6c\xb5\x68\x55\x6f\x6b\x6d\xc0\x58\x26\xdf\x60\x45\x63\xcc\x74\x60\x9f\xaa\xc6\xb6\x2b\xf4\x6d\x80\x5f\xbf\xaf\xcb\x00\xa3\x14\x4f\x7b\xf2\xb4\x29\xd5\xba\x5c\x2b\x29\x18\x36\x25\x2c\x63\x14\x8f\x67\x47\x5f\x1b\x6d\x32\x29\x86\x6b\xfd\x07\x76\xa7\xe7\x82\x43\x8f\xc7\xb0\x29\xd7\x52\x34\xbd\x87\x43\xf2\xbd\xb9\x87\x03\xbc\x03\x2e\x1e\x4e\xc7\x4f\x86\xba\x5a\x67\xf7\x70\xc8\xf3\xd4\x6e\x8f\x61\xc0\x6e\x35\x60\xb7\x29\xa1\x25\x1e\xb0\xd3\x43\x31\xbb\x0e\x59\x26\x85\x69\x60\xf6\x3c\xcf\x96\x97\x0a\xd0\xd6\xa0\x72\xbe\xf8\x8a\x47\x6c\x8b\xcf\xc4\x5a\xd5\x3b\x95\xe5\xaa\x1c\x47\xd3\x00\xfd\x81\xe2\xa3\x37\x03\x79\x50\xae\x0f\xdc\x7a\x0a\x2a\xc6\xd7\xe3\x48\x5d\xa0\x18\xdf\x8f\x23\xd9\x3a\x46\x95\x2f\x74\x8b\x2d\xf7\xa8\xe7\x15\x2e\xbb\xe4\xb9\x14\x09\x56\x09\xe8\x1c\xd9\x5a\xa7\x97\x15\x0c\xd8\x65\x52\xc4\xe9\xf1\xc4\x27\x6f\x61\x1a\x6f\x02\x3b\xa9\xcb\x35\x96\xa5\x9a\x34\xea\x2d\xb2\x0c\xf4\x1e\x03\xec\xfa\x7e\x02\x70\x73\xaa\xc4\x26\x3c\x19\xae\xf6\x30\x25\x8b\x2f\xc6\xd6\x7a\x92\x2b\x0c\x74\xf9\xd0\xd6\xf2\x66\xa2\x58\xbe\x9a\x7d\xdb\xf0\x93\x7c\xaf\xd3\x8d\xb0\x2b\x17\xcd\x72\x12\x6e\x82\xdf\xa7\xdf\xe0\xff\xd9\xd9\xf7\x22\xfe\x8d\xfd\xbf\xd9\x07\xd3\xbd\x68\x3b\xef\xa3\xb3\x2b\x4c\x52\xc4\xbf\x01\x00\x00\xff\xff\x34\x34\x90\xec\x07\x03\x00\x00")

func apiApiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiApiGoTmpl,
		"api/api.go.tmpl",
	)
}

func apiApiGoTmpl() (*asset, error) {
	bytes, err := apiApiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/api.go.tmpl", size: 775, mode: os.FileMode(438), modTime: time.Unix(1629885291, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiGen_apiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x92\x4d\x6b\xdc\x3c\x10\xc7\xef\x02\x7d\x87\x79\xf6\x10\xa4\x87\x45\x2e\xa1\x27\x17\x1f\x92\xed\x0b\xf4\x25\x09\x4d\x4b\x0f\xa5\x14\x59\x9e\x78\xb5\x2b\x4b\xce\x78\x1c\x5a\xcc\x7e\xf7\x62\x7b\x0b\x29\x69\xd3\x16\xf6\xd0\xdc\xfc\xa2\xf9\xcf\x6f\x7e\xa3\x2c\x83\x1a\x23\x92\x65\x84\xf2\x2b\xd4\xae\x3e\x96\xa2\xb5\x6e\x6b\x6b\x04\xdb\x7a\x29\xa4\xf0\x4d\x9b\x88\x41\x49\x01\xb0\x88\xc8\xd9\x9a\xb9\x5d\x4c\x6f\xb5\xe7\x75\x5f\x1a\x97\x9a\xcc\x07\x5f\x76\x59\x9d\xba\xeb\x90\xdd\x1c\xdf\xf9\x1d\x6c\xd9\xb1\x75\xdb\x0c\xdd\x3a\x65\x37\x8f\xe7\x03\x21\xd5\xf3\xc3\x30\x98\x0b\x4a\x1b\x74\x7c\x66\x1b\xdc\xed\xb2\x26\x55\x18\x16\x52\xe8\x91\xe0\xaa\x8f\x0e\x94\x85\xff\x4f\x5a\xaf\x87\xa1\x6f\x5b\xa4\x95\x6d\x30\x80\x79\x67\xcb\x80\x73\xcd\x8a\xd0\x32\x2a\x07\x63\x0b\xb3\x4a\x91\xf1\x0b\x6b\x40\xa2\x44\x30\x48\x91\xca\x0d\xe4\xc5\xd1\x94\x6c\x7e\x99\x32\xec\xa4\xf0\x57\x63\x15\xe4\x85\x33\xa7\x3e\x56\x2a\x95\x1b\xfd\x04\x89\xfe\x2b\xa2\x0f\x83\x14\x84\xdc\x53\x04\x67\x5e\x5e\x9e\x9f\xa9\x51\x87\xb9\x64\xcb\x7d\x77\x6a\xab\xb7\x78\xdd\x63\xc7\xcb\x31\xc1\x3c\x1b\x7b\x2b\xad\xa5\xd8\x49\x41\xcb\xcf\x79\x31\x09\x32\x6f\x46\x86\x29\xd6\xec\xa9\xf5\x3d\xa9\xe7\xaf\x96\x40\x73\xc6\x9f\xba\x78\xdf\x56\x0f\xd0\xc5\x9e\xfa\xc0\x2e\x9e\x62\xc0\x87\xe7\x62\x4f\x7d\x60\x17\xaf\x7d\xc7\xff\xae\x89\x54\x6e\x3a\xc8\x0b\x68\xec\x16\xd5\xc7\x4f\xbf\xe1\x58\xc2\x23\x2d\x85\x4b\xb1\x5a\x5a\xaa\xf3\x02\x3a\xa6\xde\xf1\xf8\x61\xe2\xb9\x45\x09\xb7\xf5\x1e\x8d\x6d\xb4\xf9\xb0\x46\x42\xf5\xbd\xdc\x18\xa3\xcd\x49\x08\xea\x87\x31\x42\xaa\xcd\x05\xf9\xc8\x21\xaa\xbb\x7b\xbb\x67\x2f\x53\x8b\xbf\xda\xcc\x73\x4f\x87\x5c\xcd\x4f\x6e\xd4\x0b\xe4\xc3\x4d\x37\x1f\xfa\x16\x00\x00\xff\xff\xbf\xd5\x72\xe5\x3f\x06\x00\x00")

func apiGen_apiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiGen_apiGoTmpl,
		"api/gen_api.go.tmpl",
	)
}

func apiGen_apiGoTmpl() (*asset, error) {
	bytes, err := apiGen_apiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/gen_api.go.tmpl", size: 1599, mode: os.FileMode(438), modTime: time.Unix(1629863149, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x4d\x6f\xdb\x38\x10\xbd\x13\xe0\x7f\xe0\xea\x10\x50\x8b\x84\xdc\x5d\xec\x49\x80\x0f\xad\x9b\x02\x05\x9a\xc4\x8d\xdb\x5e\x0c\xa3\xa0\xe9\x91\xcc\x86\x1f\xf6\x90\xb2\x13\x08\xfa\xef\x05\x25\xdb\x6d\xd2\x16\xd5\x45\x22\xdf\xe3\xe3\x7b\x33\xa3\xad\xd2\x0f\xaa\x01\xe6\x94\xf1\x94\x50\x62\xdc\x36\x60\x62\x9c\x12\xc6\x8a\xae\x13\x33\x0c\x5f\x41\xa7\x5b\xe5\xa0\xef\xa5\xda\x9a\x82\x92\xa2\x76\x29\xbf\x1a\x93\x36\xed\x4a\xe8\xe0\xa4\xb1\x66\x15\x65\x13\xe2\xce\xca\xfd\x7f\x2f\x40\xab\x56\x31\x29\xfd\x20\x41\x6f\x82\xdc\xff\xff\x07\x58\x3a\xb3\x5e\x5b\x38\x28\x84\x82\x92\x2f\xec\x19\xd7\xac\xe4\x76\xf7\xd3\x76\x13\xae\xe2\xce\x5e\xad\xd1\xec\x01\xa5\x7b\x8a\x3b\x9b\x2f\x41\xa8\x2d\xe8\xec\xb5\xcc\xd9\xea\xd6\xeb\x21\x28\x2f\x3b\x4a\xa4\x64\xd7\x7a\x13\x98\xf1\x31\x29\xaf\x81\x12\x60\xd5\x84\x65\x13\xe2\x16\x0e\x7c\x38\x22\x25\xbb\x39\xbb\xa1\x04\xc4\xa7\x08\xfc\xbb\x3f\xf1\x3e\x34\x0d\x20\x2f\xcb\x5f\x60\xf7\xa0\xc3\xfe\x77\xe0\xf4\xee\x7e\x3e\x20\xf9\x8e\x69\x70\x2e\x78\x86\xa1\x4d\x80\x31\xb3\x67\x77\xf3\x8f\xbc\x90\x55\xb6\xec\x95\x83\xe2\x92\xe5\x4f\xae\x83\x4f\xf0\x98\x46\x97\xd3\x71\x51\x32\x40\x0c\xd8\x8d\x01\x33\xbb\x9a\x1c\x79\x62\xa6\x50\x39\x5e\x9c\x65\x4a\x4a\x1c\xa4\x4d\x58\xe7\xa8\xc7\xf2\x88\xcf\xca\xb6\x70\x57\xf3\x0b\xb5\x35\xe2\xd5\xd6\x74\x7d\x29\x6e\x06\xd6\xeb\xa7\xdc\x78\x7e\x3a\x9e\x83\x20\x56\x93\x51\x42\x4c\x95\xb5\x7c\xb1\x7c\x26\xd3\xbd\x14\x3d\x3a\x29\xfb\x92\x12\x53\xb3\xbf\x00\x71\xf1\xcf\x52\xbc\x8b\xb7\xc6\x0e\x7d\xa8\x5d\x12\x33\x34\x3e\x59\xcf\x47\xb0\xa4\xa4\xa7\x04\x21\xb5\xe8\x99\x37\x96\x92\xfe\xd4\x8c\x79\x52\x98\x58\x04\xdc\x03\xe6\x3a\x8d\xf5\x17\x6f\x55\x52\x96\x83\x18\x60\x5e\x54\x5d\x27\xe6\x80\x7b\xa3\x61\x16\x30\xf5\x7d\x51\x8e\x9a\xc7\x19\x30\xde\x24\x5e\xb2\x8e\x12\x1d\x7c\x6d\x9a\x98\xab\xe1\xd4\x03\x70\xa7\xb6\x8b\x98\xd0\xf8\x66\xf9\xf7\x30\xcd\xb9\xc8\xb5\x69\xca\x33\x75\x51\xac\xa1\x56\xad\x4d\xc5\x92\x4d\xd8\xc5\x8f\xa4\x8e\x92\x6b\xaf\x56\x16\x2a\xc6\x12\xb6\x70\x49\xc9\x9b\x61\x22\xab\xf1\x5f\x1a\x17\x7d\x5f\x64\x20\xfa\x8a\xe5\x27\x03\xf3\xd0\xa2\x86\x11\x98\x6f\xc2\x61\xbe\xb3\xd5\x49\xa1\x1f\x93\xeb\xe0\x3d\xe8\x64\x82\x67\x6b\x95\xd4\x4a\x45\xa0\xe4\x7c\x79\x86\xf8\xd1\x60\x79\xda\xff\xd0\x02\x3e\xdd\x87\xc3\x23\x2f\x22\xe4\x9e\xb0\x7f\x73\xff\xfb\x6f\x01\x00\x00\xff\xff\x54\xf8\xc3\xc3\xf3\x03\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 1011, mode: os.FileMode(438), modTime: time.Unix(1629781749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelModelGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x4f\x4b\x03\x31\x10\xc5\xef\x81\x7c\x87\x47\xd8\x43\x2b\xb2\x0b\x1e\x0b\x3d\x15\xf4\x20\x14\x0f\xbd\xdb\x74\x33\x86\xe8\xe6\x0f\xd9\xec\xca\x12\xf2\xdd\x25\xad\x4a\x11\x3d\x78\x9c\x37\x6f\x7e\xf3\x5e\xd7\x41\x93\xa3\x28\x13\x29\x9c\x16\xe8\x5e\xdf\x71\x16\x64\xff\x26\x35\xc1\x7a\x45\x03\x67\x9c\x19\x1b\x7c\x4c\x58\x71\x06\x88\x64\x2c\x09\xce\xd6\x9c\xcd\x32\xe2\x19\x5b\x54\xa5\xdd\xfb\xf7\x6a\x4d\x4b\x20\xe4\x3c\x85\x40\x71\x27\x2d\x0d\x68\x0f\xf2\x34\xd0\x5e\x5a\x2a\x05\x63\x8a\x53\x9f\x90\x2b\x29\x67\x44\xe9\x34\xa1\x31\xb7\x68\x66\x6c\xb6\x68\x77\x7e\x98\xac\x1b\x51\xca\xc5\x71\xc5\x69\xe6\xf6\xde\xd0\xa0\x4a\x41\xce\xcd\xdc\x3e\xf8\xc3\x12\x2a\xf3\xa8\x4e\x1b\x71\x96\x3e\xf7\x02\xaf\xa3\x77\x3f\xb4\x23\xd0\x75\x97\xcb\x9d\xb7\x96\x5c\x3a\x83\xc8\xa9\xfa\xab\xd4\xec\x2f\x93\xeb\xb1\x0a\xb8\xf9\x33\xff\x1a\xdf\xc3\x6a\x5d\xcb\x18\xa7\x6b\x99\x48\x69\x8a\x0e\x22\xe7\x6b\xb7\xf8\x07\xf7\xe9\xf1\x57\xa0\x51\x5f\x90\x8f\x00\x00\x00\xff\xff\x02\x39\x5d\x44\xab\x01\x00\x00")

func modelModelGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelModelGoTmpl,
		"model/model.go.tmpl",
	)
}

func modelModelGoTmpl() (*asset, error) {
	bytes, err := modelModelGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/model.go.tmpl", size: 427, mode: os.FileMode(438), modTime: time.Unix(1629775264, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api/api.go.tmpl":     apiApiGoTmpl,
	"api/gen_api.go.tmpl": apiGen_apiGoTmpl,
	"main.go.tmpl":        mainGoTmpl,
	"model/model.go.tmpl": modelModelGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api": &bintree{nil, map[string]*bintree{
		"api.go.tmpl":     &bintree{apiApiGoTmpl, map[string]*bintree{}},
		"gen_api.go.tmpl": &bintree{apiGen_apiGoTmpl, map[string]*bintree{}},
	}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"model.go.tmpl": &bintree{modelModelGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
