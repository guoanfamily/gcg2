// Code generated by go-bindata.
// sources:
// template/api/api.go.tmpl
// template/api/gen_api.go.tmpl
// template/api/paginate.go.tmpl
// template/main.go.tmpl
// template/model/localTime.go.tmpl
// template/model/model.go.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiApiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8c\x41\x0a\xc3\x30\x0c\x04\xef\x02\xfd\x61\xc9\xa9\xe9\xa1\x86\xfe\xa0\x25\x1f\x51\x8c\x31\xa6\x38\x16\x8a\x5a\x08\xa5\x7f\x2f\xca\x5e\x16\x76\x99\x49\x09\xb5\x6c\xc5\xc4\x0b\xd6\x03\x35\xd7\x3b\x93\x4a\x7e\x49\x2d\x10\x6d\x4c\x4c\xad\xeb\x30\xc7\x85\x69\xaa\xc3\xfa\xad\x8d\x14\x3d\x31\xcd\x71\xfb\xa1\x05\x0f\x6d\xd8\xdd\xde\xd9\xf1\xfd\xc5\xfa\x11\x0b\x62\x59\x11\xb9\x9e\xe0\xf2\x0c\xb7\x49\xdf\xd1\x36\x67\x9a\xff\x01\x00\x00\xff\xff\x41\xf5\xeb\x28\x7e\x00\x00\x00")

func apiApiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiApiGoTmpl,
		"api/api.go.tmpl",
	)
}

func apiApiGoTmpl() (*asset, error) {
	bytes, err := apiApiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/api.go.tmpl", size: 126, mode: os.FileMode(438), modTime: time.Unix(1631247792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiGen_apiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x94\x4d\x4f\xdb\x40\x10\x86\xef\x96\xfc\x1f\x86\x1c\x90\x5d\xa1\x75\x55\xa1\x1e\xa8\x7c\x80\x50\x0e\xfd\x80\x08\xa8\x7a\x40\x1c\xc6\xeb\x89\xb3\x89\xbd\xeb\xee\x8e\x69\x2b\x2b\xff\xbd\x5a\xdb\x25\xa5\x25\x25\xaa\x1a\x04\xb7\x64\x3d\x3b\x1f\xcf\x3b\xef\x26\x09\x14\xa4\xc9\x22\x13\x64\xdf\xa1\x90\xc5\xab\x30\xa8\x51\x2e\xb0\x20\xc0\x5a\x85\x41\x18\xa8\xaa\x36\x96\x21\x0a\x03\x80\x91\x26\x4e\x66\xcc\xf5\xa8\xfb\x57\x28\x9e\x35\x99\x90\xa6\x4a\x4a\xcc\x1c\xa3\x5c\x24\x24\x67\x26\xb9\xd9\xef\x03\x4a\x53\xf4\x3f\xda\x56\x4c\xac\x99\x93\xe4\x53\xac\x68\xb9\x4c\x2a\x93\x53\x39\x0a\x83\xd8\x97\x98\x36\x5a\x42\x84\xf0\xe2\xb0\x56\x71\xdb\x36\x75\x4d\x76\x8c\x15\x95\x20\x2e\x31\x2b\xa9\xbf\x33\xb6\x84\x4c\x91\x04\x5f\x42\x8c\x8d\x66\xfa\xc6\x31\x90\xb5\xc6\x42\x1b\x06\x26\x9b\xc3\x41\xda\x25\x16\x6b\x93\xb4\xcb\x30\x50\x53\x7f\x09\x0e\x52\x29\x8e\x94\xce\xa3\x5d\x93\xcd\xe3\x37\x64\xed\x4e\xaa\x55\xd9\x86\x81\x25\x6e\xac\x06\x29\xde\x5d\x9c\x9d\x46\x7e\x5e\x71\xc1\xc8\x8d\x3b\xc2\xfc\x9c\xbe\x34\xe4\x78\xcf\xa7\x10\x6f\x7d\xed\x28\x8e\xc3\x60\xe9\x6f\x39\x38\x48\xe1\x38\x13\x43\xa7\x5d\xde\xbf\x64\x3b\x7b\xbf\x07\x96\x9c\x38\x37\x5f\xdd\xe1\x74\x4a\x92\x29\xef\x53\x6d\x8a\xe4\x08\x59\xce\x36\xe0\xd2\x35\x56\xe1\x82\xa2\xab\xeb\x07\x00\xed\xc1\xcb\xf8\x7e\x44\x6e\x5b\x8c\xdc\x76\x21\x7d\xaa\xf3\x67\xb2\x37\x7d\xa7\xee\x11\x16\xe7\x98\x4a\x7a\x1e\x4c\x86\x4e\xb7\x8f\xe4\x83\x72\xfc\x74\x81\xfc\x8b\x89\x57\x10\x3f\xcf\xc8\x0e\x0c\xc5\xc9\xca\xcf\x5d\xb7\x9e\x5a\x57\x0a\x76\x52\xd0\xaa\xf4\xd3\x96\xa6\x10\x13\xab\x34\x97\x3a\xba\xfd\xfe\xbb\x42\xeb\x95\x18\x92\xff\x09\x1f\xd6\x76\x3c\xc1\xe2\xbf\xae\x23\xdc\xc1\xdf\x1d\xae\xc6\x7b\x3c\x09\x6e\xd0\x82\x34\x8d\x66\x50\x9a\x5f\xef\x87\xc1\x71\x26\x3e\xfa\x8b\x83\x18\xbf\x0a\x33\xf6\x71\xd1\x6e\x17\x7e\x47\xbd\x0b\x69\x6a\x72\xd1\x04\x0b\xa5\xbb\x97\x2c\x8e\xb7\xa1\x28\xda\xdb\xe9\x2a\xac\xaf\x1c\x5b\xa5\x8b\x6b\xa5\x99\xec\x14\x25\xb5\xcb\xd8\xc7\x5c\x8d\xd8\x30\x96\xa3\x6b\x48\xfb\xc9\xfa\xc3\x1c\x19\xbb\x33\xdf\xc6\x03\x3e\x45\xfb\x73\x39\x36\xf5\xe6\x89\xb2\x4f\xd9\x9c\xf7\x1b\xed\xd2\x93\x1c\xde\xad\xad\xf9\xac\x0f\xfa\x11\x00\x00\xff\xff\xee\xe9\xcd\x83\xc8\x09\x00\x00")

func apiGen_apiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiGen_apiGoTmpl,
		"api/gen_api.go.tmpl",
	)
}

func apiGen_apiGoTmpl() (*asset, error) {
	bytes, err := apiGen_apiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/gen_api.go.tmpl", size: 2504, mode: os.FileMode(438), modTime: time.Unix(1663656929, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiPaginateGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xcd\x6a\xeb\x30\x10\x85\xf7\xf3\x14\x83\x56\x52\xb8\x57\x76\xa0\xab\x50\x17\xfa\xb3\x2c\x34\xa5\x0f\x10\x64\x45\xb6\x87\xd4\x96\x91\xc6\x69\x9b\xe0\x77\x2f\x72\x63\x2f\xb2\x28\x5d\xf9\x80\xbf\xf3\xcd\x41\xbd\xb1\x07\x53\x3b\x34\x3d\x01\x50\xdb\xfb\xc0\x28\x41\xd4\xc4\xcd\x50\x6a\xeb\xdb\xec\xdd\x94\x91\x8d\x3d\x64\xce\x36\x3e\x3b\xde\x08\x10\xb5\x0f\xad\x26\x9f\xa5\xaf\x00\x11\x39\x58\xdf\x1d\x05\x28\x80\x6a\xe8\x2c\x6e\x4d\x4d\x9d\x61\x27\x2d\xa6\x92\x7e\xf4\x1d\xbb\x4f\x56\x98\xfe\xca\x7d\x89\xab\xc9\xf0\xf4\xa0\x96\x84\x67\x08\x8e\x87\xd0\xfd\xce\xf4\xa6\x76\xff\x70\x87\x9b\x02\x2f\x57\xf5\x3d\x7b\x92\x56\xbf\x0e\x2e\x7c\x6d\x4d\x30\xad\x14\x89\x12\x4a\x01\x55\x98\x22\x16\x05\xe6\x97\x32\x16\xb8\x86\x11\xa6\xfc\x46\xa7\x3f\xca\x76\x91\x4e\x93\x31\x7e\x10\xdb\x06\xcf\x60\x4d\x74\x38\x4b\xf0\x0e\xd7\x79\xbe\x59\xa4\xe9\x48\x9e\x5f\x31\xb7\x05\x5e\x23\x69\x88\xaf\xaa\xe8\x38\x6d\x90\xd3\xbe\xff\xb8\x56\xb8\x5a\x6a\xf3\xab\xec\x4b\xfd\x32\x91\xf2\xa7\xa0\xf4\x33\xb5\xc4\x72\xe6\x14\x8c\x30\xc2\x77\x00\x00\x00\xff\xff\x92\xb2\x9c\x1b\xce\x01\x00\x00")

func apiPaginateGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiPaginateGoTmpl,
		"api/paginate.go.tmpl",
	)
}

func apiPaginateGoTmpl() (*asset, error) {
	bytes, err := apiPaginateGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/paginate.go.tmpl", size: 462, mode: os.FileMode(438), modTime: time.Unix(1648085323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\x4f\x6b\x24\x45\x14\xc0\xef\x0d\xfd\x1d\x2a\x7d\x58\xaa\xd9\xd9\xea\x04\x3c\x0d\xcc\x61\x33\x31\x18\xd8\x49\x42\xb2\xd9\x4b\x0c\x6e\xa5\xe7\x75\xa7\x4c\x75\x55\xa7\xaa\x7a\x92\xd8\x34\x04\x11\xc5\xc3\xba\x87\x75\x09\x88\x88\x87\x15\xf5\x60\x5c\x45\x44\x82\x7f\x3e\x8c\x9b\xc9\xe6\x5b\x48\x55\xf5\xce\x64\x42\xd4\xc3\x4c\x57\xf7\x7b\xef\xf7\xde\xab\xf7\xa7\xa4\xe9\x3e\xcd\x01\x15\x94\x89\x30\x08\x03\x56\x94\x52\x19\x84\xc3\x00\xa1\xa8\xae\xc9\xba\x92\xef\x43\x6a\x56\x69\x01\x4d\x93\xd0\x92\x45\x61\x10\xe5\xcc\xec\x55\xbb\x24\x95\x45\xc2\xe9\xae\x36\x34\xdd\x4f\x20\xdd\x93\xc9\xe8\xad\xff\x11\x27\x05\x1b\x0e\x39\x1c\x52\x05\x51\x18\xbc\x87\xa2\x5c\xaa\x82\x30\x99\x0c\x15\x1b\x81\x4a\x4a\xa9\x4d\xae\x40\x3b\x4c\x2b\xb2\xcf\x56\x79\x0a\xce\xe5\x3d\x7d\xc0\xef\xb5\x66\xc5\xb1\x3e\xe0\xd6\x46\x41\xc6\x21\x35\xfe\x98\xc3\x51\x69\x4f\xda\x28\x26\x72\xc7\x34\xac\xb0\x8e\x63\x9b\x6a\x56\x89\x14\x31\xc1\x0c\x8e\xeb\x30\x18\x6a\x81\xba\x3d\x97\xf3\xa6\xac\x54\x0a\x4d\x13\x85\xc1\x88\x2a\x04\xca\xfd\xa4\x0a\x03\x5a\x32\xb2\xb4\xdb\x71\x9f\x7a\xc8\x05\xb8\x56\x82\xc0\x75\x4d\x96\x5c\x24\x4d\xe3\x3f\x0c\xb5\x88\x3b\xe8\x8e\xd3\xe8\x4b\x91\xb1\xbc\x6e\xe2\x30\x60\x99\x33\x9d\xeb\x21\xc1\x38\xaa\xc3\xa0\xa4\x82\xa5\x38\xca\x28\xe3\x30\x44\x46\xa2\x54\x0a\x01\xa9\x41\x43\x6a\xe8\x2e\xd5\x10\xc5\x61\xd0\x84\x81\x3e\xe0\x4b\x8b\xde\x6f\xb7\x87\x7c\x18\x64\x69\x11\xbb\x44\x92\x04\x6d\x82\x19\xd0\xa3\x95\x21\x87\xbe\x14\x42\xa3\xd7\x67\x7f\x5e\xfe\x71\x76\xf9\xfd\xf9\xd5\xe9\xcf\xaf\xff\xfa\x6a\xfc\xd9\x37\xe3\x9f\xbe\x7e\xf5\xdb\x0f\xfe\x7c\xf9\xc5\x47\xe3\x2f\x4f\x2e\x5e\x7c\x3b\x7e\xfe\xf2\xea\x93\xa7\x2d\x9e\xdc\x80\xe0\x85\xf9\x59\xbc\xcd\xec\x3a\x7e\xfc\xe9\xb3\x8b\xdf\x4f\xc6\xcf\x5f\x8e\x9f\x9c\x5d\x9c\x3f\xbb\x95\xfd\xf7\xc9\x87\xb3\xf8\x09\x04\x2f\xcc\x5f\xe7\xdb\x6f\x03\x7a\xf4\x80\x65\x60\x8b\xd4\xba\x78\x75\xfe\xb1\xc7\x5e\x3c\xfd\xf1\xe2\xc5\x93\xcb\xcf\xbf\x9b\xf2\x4f\x7f\xbd\x3a\xfd\x65\x96\x7f\x03\x82\xed\x1f\x79\x47\x56\xca\xdf\x62\x5b\xf3\x3e\x2d\x99\xa1\x9c\x7d\x00\xcb\x4c\x69\x83\x35\xf2\x1d\x12\xb7\x4f\x5b\x18\x96\x21\x8d\x7a\x3d\x14\x45\xf6\x4d\x81\xa9\x94\x40\xda\x51\x32\x6b\x64\xcb\xa0\xb7\xbb\x0b\x3b\x53\xa1\xef\x32\xf2\x50\x6e\x95\x25\x28\xec\xd4\x62\x74\x17\xe9\xed\x85\xee\xce\x8c\x7f\x29\x46\xa0\xcc\x96\xe2\xb8\x52\xfc\x16\xe7\xb6\xeb\xf6\xe1\x78\x40\x4d\xba\xb7\x61\xdb\x18\xf5\x90\x6f\x67\x32\xa8\xb4\xe9\xcb\xa2\x64\x1c\xf0\x63\xfc\xee\xe1\xdd\xf8\x71\x1c\x06\xa9\x27\xc2\xd0\x86\x35\x63\x49\x36\xa0\xe4\x34\x85\xfb\x9c\x6f\x3a\xfe\x72\x25\x52\x1c\x06\x95\xe2\x9d\x30\xb8\x71\x13\x1d\x37\x19\x37\xf2\x99\x02\xf0\xc4\x4d\x07\x45\x49\xd4\x41\x51\x34\x73\xaf\x76\x87\xb8\x59\x4a\x12\xf4\x76\xba\x27\x11\x13\xda\x50\x91\x42\x18\x80\x0d\xcc\xee\x00\xb2\x0a\x87\x93\xae\x1d\x4c\x96\x41\x18\x00\xd9\xd2\x80\xa7\xeb\x81\x3c\x90\x79\x0e\x0a\xc7\xf1\x2d\xb2\x0d\x48\xe5\xe8\xdf\x84\xfd\xb5\x8d\x4d\x27\xb1\x3e\xfa\xb2\x28\xa4\x40\x4a\x56\x06\x94\xb6\xda\xeb\x6b\x9b\x0f\x71\x94\x74\x6d\xc8\x82\x16\x10\x75\x90\x3d\xda\xe4\x0c\x1c\x19\x1f\x65\xdf\xbf\xc4\x7e\xf0\x6b\x9f\xa0\xd5\xee\xf6\x5a\x3d\xb2\x4e\x15\x2d\x70\x34\xc1\xc4\x53\x25\x9b\xec\x7f\xa8\x15\x60\xf6\xa4\x2b\x55\xbb\xae\xc8\x23\xca\x2b\x58\xcb\xf0\x1d\x3b\xd9\xf7\x4b\x56\x37\x31\x19\x38\xad\xc5\x63\xbb\x7a\xf1\x1b\x73\xbf\x43\xe6\x3c\x81\xac\xe8\x47\x94\xb3\x21\x8e\xaf\xf5\xa8\x60\xdc\xd5\x04\x94\xea\xf6\x5a\xbd\x3e\xe5\x1c\x6f\xef\xcc\x78\xab\x6f\xfa\x6e\x03\x8e\xdb\x3d\x35\x07\x4a\x6d\xcf\xef\x90\x15\xbd\xca\xb8\xab\x6a\x56\x18\xb2\xae\x98\x30\x5c\x60\x2f\xf4\xd5\x9f\x71\x3c\x99\x68\x43\x95\x41\x1a\xd4\x08\x94\xbd\x75\x5f\x4d\xb2\x4c\x0d\xe5\x18\x88\x13\xe3\xa8\x6b\xb7\x2d\xa8\x11\x4b\x61\x5d\x2a\xd3\x34\x51\xfc\xa6\xa3\xfe\x09\x00\x00\xff\xff\xde\x53\xa8\xf9\x99\x06\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 1689, mode: os.FileMode(438), modTime: time.Unix(1656662914, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelLocaltimeGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x5d\x6b\x13\x4d\x14\xc7\xef\xcf\xa7\x38\xcc\x4d\x77\xd3\x6d\x32\x1b\x9e\x3e\x17\x0b\x79\xe0\x01\xf1\x42\x6c\x15\xaa\xde\x88\x98\xc9\x66\xb6\x5d\xba\x2f\x71\x76\x92\x50\x42\xc0\x8b\xa2\x82\x2d\xf6\x42\x10\x2b\x14\xdf\x50\x84\x6a\xd1\xab\xa2\x15\xbf\x4c\xf3\xe2\xb7\x90\xd9\x69\x37\x9b\xd4\x54\x28\x15\xbd\xdb\xdd\x39\x2f\xbf\xf3\xdf\xf3\x9f\x06\x73\x57\xd9\x32\xc7\x30\xae\xf3\x00\xc0\x0f\x1b\xb1\x90\x68\x00\xa9\x33\xc9\x6a\x2c\xe1\xa5\xe4\x4e\x50\xaa\x0b\xbf\xc5\x05\x01\xc2\x85\x88\x45\x42\x80\x48\x3f\xe4\x04\x4c\x00\x37\x8e\x12\x89\xd7\xfc\x90\x5f\x8c\x45\xc8\x24\x56\x90\x94\x29\xfd\x77\x8e\xda\x73\xb4\x8c\xf6\xbc\x43\xff\x71\xe8\x3c\x01\x90\x6b\x0d\x8e\x97\x63\x97\x05\x2a\x1a\x55\x85\xa2\x7a\x02\xf0\x9a\x91\x8b\x86\xc4\x42\x76\x6a\xe2\xf5\x28\x64\x22\x59\x61\xc1\xa5\xa5\x2b\x8b\x86\xa2\xc1\x9b\xb7\x6a\x6b\x92\x9b\x68\x70\x21\x30\x25\x31\xb1\x03\xa5\x12\x0e\xde\x7d\xee\xdd\x3d\x38\xdc\xdf\x1c\x7e\x7b\x36\x7c\xb1\x31\x7c\xfb\xaa\xbf\xb3\x05\xbe\x87\x01\x8f\xd2\x54\x13\x2b\x15\x2c\x63\x07\x0a\x8a\x2f\xeb\x62\x64\x0c\x9d\xae\x09\x82\xcb\xa6\x88\xa0\x0b\xd2\x43\xa7\x92\x1b\xc9\xa6\xe3\xb5\xfe\x43\x5b\xd5\x92\x1e\xe6\xa3\xa0\xab\x50\xfa\x1b\xf7\x7b\x1f\xb6\x35\xc1\x60\x7b\xbd\xff\xfc\xa0\x77\xf0\x08\xa2\xb8\x6d\x29\x62\x55\x37\xed\x79\x95\x89\x84\x1b\x55\x52\x9d\x95\xde\x6c\x95\x54\x2d\x4c\xa4\xf0\xa3\x65\xdd\xc1\x9c\xe4\x8c\xe2\x76\x8e\x2f\xd3\x2b\x27\xd7\x42\x4e\x2c\x13\x0d\x2d\x95\x35\x52\xa9\xa6\x5a\x87\x6c\x95\x67\x47\xd4\x4a\x47\x1a\x0d\x60\xce\x96\x4d\xa8\x61\x05\x59\xa3\xc1\xa3\xba\x51\xb3\x70\x86\xcc\xe8\x4f\x99\x50\x86\x34\x8b\xff\xa7\xe7\x3a\x49\x45\xe5\x4a\xfc\x2c\x5f\x73\x63\xcd\xc2\xc8\x0f\xa6\xe0\xdf\x60\x41\x93\x2b\x70\xbd\x69\xc5\xf4\xdd\x1a\xfb\xc9\x0b\x6b\xe9\xda\x0c\xbf\xee\xf6\x37\x5f\xf6\x1f\x6c\x8d\x98\x70\xf0\xf1\x4b\x6f\xe7\x21\xc8\xf4\xc5\x19\xa7\x3d\x6e\x9f\x1e\x16\x8f\xa0\x73\xc4\x27\xa8\xf2\x4b\xb8\xe4\xb2\xc8\x68\xa1\x1f\x49\x2e\x3c\xe6\xaa\x35\xd1\x4c\xd8\x81\xa4\xed\x4b\x77\x05\x5b\x52\x75\x6c\x15\x0d\xb5\xde\x0a\xd5\x65\x09\x3f\xfa\x9b\x8e\xe2\xee\xbd\x7f\x32\xd8\x7d\x73\xb8\xff\x49\x91\x4f\xc5\xb6\xf0\xf6\xc4\x72\x8c\x18\x2d\x6c\xc9\x13\x2b\x91\x66\x99\xba\x5b\x56\xd2\x99\x8c\x52\x89\x75\xee\xb1\x66\x20\x9d\x63\x25\xb4\x87\x8b\x8b\xbc\x6d\x10\x8d\xd0\x7b\xbd\x3e\xd8\xba\xf7\xfd\xf1\xd3\xe1\xde\x1e\x31\xa1\x7b\x1c\x79\xa4\x4c\xa9\x00\x81\xaa\x78\x81\x49\x0e\x85\x52\xce\xc8\xea\x4b\xde\xc8\x93\x97\x81\x4d\xc7\xaf\x03\x32\x29\xb3\x2a\xf0\xfb\xbd\xae\xba\x4c\xf1\xfa\x59\x2c\x9b\x9f\xef\x74\xf3\xa6\x8d\x4f\x33\xaf\x9e\xff\x1c\xcc\x6b\xd3\x73\xb0\xaf\x4d\xcf\x60\x60\x3d\xc2\x1f\x33\xb0\x4d\xa7\x59\x58\x83\xfd\x1d\x16\xb6\xe9\xa4\x89\xf5\x4e\xfe\xca\xc4\x69\xd4\x39\x98\xf8\x47\x00\x00\x00\xff\xff\xab\xa4\x2d\x93\xe7\x07\x00\x00")

func modelLocaltimeGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelLocaltimeGoTmpl,
		"model/localTime.go.tmpl",
	)
}

func modelLocaltimeGoTmpl() (*asset, error) {
	bytes, err := modelLocaltimeGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/localTime.go.tmpl", size: 2023, mode: os.FileMode(438), modTime: time.Unix(1648448039, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelModelGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\xdf\x8b\xd3\x40\x10\x7e\x0f\xe4\x7f\xf8\x5c\x2a\x24\x47\xd9\x88\xf8\x74\x50\x1f\xae\x87\x22\x42\x11\x3c\x7c\xf5\xb6\xc9\x24\xae\x66\x77\xe3\x64\xd3\x6b\x59\xf2\xbf\xcb\xa4\x45\xaa\xa2\xf8\x14\x32\xfb\xfd\x9a\xf9\xaa\x0a\x1d\x79\x62\x13\xa9\xc1\xfe\x84\xae\xee\x5e\xe6\xd9\x60\xea\x6f\xa6\x23\xb8\xd0\x50\x9f\x67\x79\x66\xdd\x10\x38\xa2\xc8\xb3\x94\x6c\x0b\xfa\x0e\xfd\x81\xad\x33\x7c\x7a\x4f\xa7\x87\xd3\x40\x50\x63\x64\xeb\x3b\x35\xcf\x79\xa6\x5a\x17\x55\x9e\xa9\xce\xc6\x2f\xd3\x5e\xd7\xc1\x55\x5d\x68\x79\xac\xa6\xc9\x36\xcb\x43\x60\xa7\x6d\xa8\xe4\xab\x44\x93\x7c\x23\x44\x40\x45\xeb\x48\xe5\x59\x99\x67\x07\xc3\xf8\x8c\x0d\x64\xa2\x77\xe1\x49\x72\x44\xb1\x4a\x69\x1a\x06\xe2\xad\x71\xd4\x43\x3f\x98\x7d\x4f\x3b\xe3\x68\x9e\x31\x46\x9e\xea\x88\x24\x4a\x29\x81\x8d\xef\x08\x2b\xbb\xc6\xea\x80\xdb\x0d\xf4\x36\xf4\x93\xf3\x23\xce\x5e\xbf\xe8\xac\x0e\xfa\x8d\xa5\xbe\x99\x67\xa4\xb4\x3a\xe8\xb7\x41\xd6\x9a\x67\x3c\x7e\x1d\x83\xbf\x55\x29\xd5\xbf\xe1\xd4\x23\x50\x55\x67\xf4\x36\x38\x47\x3e\x2e\xe4\xcb\x2e\xb3\xe4\x6d\x27\x5f\xa3\x18\x70\xf3\xd7\xcc\x25\x7e\xfe\x14\x25\xce\x47\x94\x05\x98\xe2\xc4\x1e\x2a\xa5\x6b\xb4\xba\xe8\xfe\x4f\x0b\x67\xef\xf8\x4f\xef\x3b\x6a\x03\xd3\x96\xc9\x44\x2a\xe2\x11\x37\x4b\x33\xf7\x77\x25\x88\x39\xb0\x04\xb1\x2d\x7a\xf2\x45\xd4\xef\xee\x4b\xbc\xc6\x8b\xab\x70\xde\xf6\x4b\x1e\xdb\xac\x05\x2f\x27\x96\x86\xf5\x8e\x9e\x3e\xbd\x2a\xca\x85\x2b\xf3\x67\x1b\x81\x5e\x11\x89\x79\x21\x8a\x28\x36\x68\x5d\xd4\x1f\x07\xb6\x3e\xb6\x85\x7a\x7e\x54\x6b\xd8\xa6\xfc\xc3\xe5\x72\xd9\x1f\x01\x00\x00\xff\xff\x08\x04\xad\xdc\xb2\x02\x00\x00")

func modelModelGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelModelGoTmpl,
		"model/model.go.tmpl",
	)
}

func modelModelGoTmpl() (*asset, error) {
	bytes, err := modelModelGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/model.go.tmpl", size: 690, mode: os.FileMode(438), modTime: time.Unix(1656583299, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api/api.go.tmpl":         apiApiGoTmpl,
	"api/gen_api.go.tmpl":     apiGen_apiGoTmpl,
	"api/paginate.go.tmpl":    apiPaginateGoTmpl,
	"main.go.tmpl":            mainGoTmpl,
	"model/localTime.go.tmpl": modelLocaltimeGoTmpl,
	"model/model.go.tmpl":     modelModelGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api": &bintree{nil, map[string]*bintree{
		"api.go.tmpl":      &bintree{apiApiGoTmpl, map[string]*bintree{}},
		"gen_api.go.tmpl":  &bintree{apiGen_apiGoTmpl, map[string]*bintree{}},
		"paginate.go.tmpl": &bintree{apiPaginateGoTmpl, map[string]*bintree{}},
	}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"localTime.go.tmpl": &bintree{modelLocaltimeGoTmpl, map[string]*bintree{}},
		"model.go.tmpl":     &bintree{modelModelGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
