// Code generated by go-bindata.
// sources:
// template/api/api.go.tmpl
// template/api/gen_api.go.tmpl
// template/main.go.tmpl
// template/model/model.go.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiApiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8c\x41\x0a\xc3\x30\x0c\x04\xef\x02\xfd\x61\xc9\xa9\xe9\xa1\x86\xfe\xa0\x25\x1f\x51\x8c\x31\xa6\x38\x16\x8a\x5a\x08\xa5\x7f\x2f\xca\x5e\x16\x76\x99\x49\x09\xb5\x6c\xc5\xc4\x0b\xd6\x03\x35\xd7\x3b\x93\x4a\x7e\x49\x2d\x10\x6d\x4c\x4c\xad\xeb\x30\xc7\x85\x69\xaa\xc3\xfa\xad\x8d\x14\x3d\x31\xcd\x71\xfb\xa1\x05\x0f\x6d\xd8\xdd\xde\xd9\xf1\xfd\xc5\xfa\x11\x0b\x62\x59\x11\xb9\x9e\xe0\xf2\x0c\xb7\x49\xdf\xd1\x36\x67\x9a\xff\x01\x00\x00\xff\xff\x41\xf5\xeb\x28\x7e\x00\x00\x00")

func apiApiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiApiGoTmpl,
		"api/api.go.tmpl",
	)
}

func apiApiGoTmpl() (*asset, error) {
	bytes, err := apiApiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/api.go.tmpl", size: 126, mode: os.FileMode(438), modTime: time.Unix(1631247792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiGen_apiGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x92\x4f\x6f\xd4\x30\x10\xc5\xef\x96\xfc\x1d\xa6\x7b\x40\x09\x5a\x39\x08\x71\x5a\x94\x43\xbb\xa5\x07\x40\x6d\xd5\x16\x71\x40\x1c\x1c\x67\x36\xeb\x5d\xc7\x0e\xe3\x09\x7f\x14\xed\x77\x47\x4e\x02\x42\x88\xf2\xe7\x50\xd4\xde\x6c\x79\xe6\xbd\x37\xbf\x71\x51\x40\x83\x1e\x49\x33\x42\xf5\x05\x1a\xd3\x3c\x95\xa2\xd3\x66\xaf\x1b\x04\xdd\x59\x29\xa4\xb0\x6d\x17\x88\x21\x93\x02\x60\xe1\x91\x8b\x2d\x73\xb7\x18\x6f\x8d\xe5\x6d\x5f\x29\x13\xda\xc2\xe9\x2a\xb2\x36\xfb\x02\xcd\x36\x14\x1f\x9f\x4d\x05\x2e\x34\xd3\x61\x18\xd4\x25\x85\x1d\x1a\x3e\xd7\x2d\x1e\x0e\x45\x1b\x6a\x74\x0b\x29\xf2\x64\xb1\xe9\xbd\x81\x4c\xc3\xe3\xe3\xce\xe6\xc3\xd0\x77\x1d\xd2\x5a\xb7\xe8\x40\xdd\xe8\xca\xe1\xd4\xb3\x26\xd4\x8c\x99\x81\x64\xa1\xd6\xc1\x33\x7e\xe6\x1c\x90\x28\x10\x0c\x52\x84\x6a\x07\xab\x72\x14\x56\xb7\x8a\x0c\x07\x29\xec\x26\x35\xc1\xaa\x34\xea\xc4\xfa\x3a\x7b\x14\xaa\x5d\xfe\x1c\x89\x8e\x4a\x6f\xdd\x20\x05\x21\xf7\xe4\xc1\xa8\x97\xd7\x17\xe7\x59\x9a\x57\x5d\xb3\xe6\x3e\x9e\xe8\xfa\x0a\x3f\xf4\x18\x79\x99\x24\xd4\x8b\xe4\x9d\xe5\xb9\x14\x87\xd4\x15\x61\x55\xc2\x69\xa5\xe6\xa4\xa3\xee\x6f\xd4\x2e\x5e\x2d\x81\x30\xaa\xab\xf0\x29\x1e\x6f\x36\x68\x18\xeb\x49\xea\x6f\x91\xbc\xe9\xea\x07\x82\x64\x4a\x1a\xff\x03\x93\x53\x74\xf8\x30\x98\xcc\x49\xef\x1e\xc9\x6b\x1b\xf9\xfe\x02\x09\xd5\x6e\x24\xd2\xea\x3d\x66\xef\xde\xff\x21\xc8\x12\x9e\xe4\x3f\x42\x7c\xbb\x45\x9a\x19\xaa\xb3\x6f\xa9\x62\x3e\xa6\x4d\xd4\x46\x2b\x38\x2a\xc1\x5b\x97\xa6\x75\xa1\x51\x97\x64\x3d\x3b\x9f\x7d\x7f\xff\x79\x43\xb7\x6f\x62\x16\xff\x07\xf8\x67\x96\xee\x33\xfd\x5f\x93\xbc\x49\xbb\x98\x3f\xe6\x9d\x81\x9c\x8a\xbe\x06\x00\x00\xff\xff\xb7\x0b\x43\xbb\x84\x06\x00\x00")

func apiGen_apiGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_apiGen_apiGoTmpl,
		"api/gen_api.go.tmpl",
	)
}

func apiGen_apiGoTmpl() (*asset, error) {
	bytes, err := apiGen_apiGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/gen_api.go.tmpl", size: 1668, mode: os.FileMode(438), modTime: time.Unix(1646990590, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\xcf\x6b\x23\x37\x14\xc7\xef\x03\xf3\x3f\x28\x73\x58\x34\x90\xd5\x64\xa1\x27\x83\x0f\x8d\xdd\xd2\xc0\x3a\x36\xeb\x76\x2f\xcb\x52\x64\xcd\x9b\xb1\xba\x1a\x69\x22\xc9\xde\x84\x61\x20\x94\xd2\xd2\x43\x9a\x43\x1a\x02\xa5\x94\x1e\x52\xda\x1e\x9a\xa6\xa5\x94\x12\xfa\xe3\x8f\x69\x6c\x27\xff\x45\xd1\xcc\xc4\x89\x43\xca\x1e\x6c\xcb\x7a\x4f\x9f\xf7\xeb\xfb\x72\xca\x5e\xd1\x14\x50\x46\xb9\xf4\x3d\xdf\xe3\x59\xae\xb4\x45\xd8\xf7\x10\x0a\x8a\x82\x0c\xb4\xfa\x08\x98\xdd\xa6\x19\x94\x65\x44\x73\x1e\xf8\x5e\x90\x72\x3b\x9e\x8c\x08\x53\x59\x24\xe8\xc8\x58\xca\x5e\x45\xc0\xc6\x2a\x9a\xbe\xf5\x06\x73\x94\xf1\x38\x16\xf0\x9a\x6a\x08\x7c\xef\x43\x14\xa4\x4a\x67\x84\xab\x28\xd6\x7c\x0a\x3a\xca\x95\xb1\xa9\x06\x53\x61\x1a\x93\xfb\x6d\x9c\x6f\xc1\xa9\x7a\x6c\x76\xc4\xe3\xe6\x59\xb6\x67\x76\x84\x7b\xa3\x21\x11\xc0\xac\x3b\x5a\x9e\xb9\x18\xa1\xab\x2a\x99\x48\x86\xb8\xe4\x16\x87\x85\xef\xc5\x46\xa2\x56\xbb\x2a\x6f\xa8\x26\x9a\x41\x59\x06\xbe\x37\xa5\x1a\x81\xae\x3e\x4a\xfb\x1e\xcd\x39\xe9\x8e\xd6\xab\xab\x36\xaa\x72\xe9\xe7\x20\x71\x51\x90\x6e\x15\xb4\x2c\xeb\x8b\xd8\xc8\x70\x1d\x3d\xaa\x3c\x3a\x4a\x26\x3c\x2d\xca\xd0\xf7\x78\x52\x3d\x5d\x6b\x23\xc9\x05\x2a\x7c\x2f\xa7\x92\x33\x1c\x24\x94\x0b\x88\x91\x55\x88\x29\x29\x81\x59\x14\x53\x4b\x47\xd4\x40\x10\xfa\x5e\xe9\x7b\x66\x47\x74\x37\xeb\xb8\xad\x36\xaa\xd3\x20\xdd\x4d\x5c\x15\x12\x45\x68\x08\xb6\x47\x77\xb7\x62\x01\x1d\x25\xa5\x41\x57\x67\x7f\x2f\xfe\x3a\x5b\xfc\x78\x71\x7d\xf2\xeb\xd5\x3f\xdf\xcc\xbf\xf8\x6e\xfe\xcb\xb7\x97\x7f\xfc\x54\x9f\x17\x5f\x7d\x32\xff\x7a\x7f\x76\xfa\xfd\xfc\xf8\xfc\xfa\xb3\xc3\x06\x4f\xee\x41\xf0\x93\x8d\x55\xbc\xab\xec\x2e\x7e\xfe\xf9\xd1\xec\xcf\xfd\xf9\xf1\xf9\xfc\xe0\x6c\x76\x71\xf4\x20\xfb\xdf\xfd\x8f\x57\xf1\x4b\x08\x7e\xb2\x71\x97\xef\xee\x7a\x74\xf7\x29\x4f\xc0\x0d\xa9\x09\x71\x79\xf1\x69\x8d\x9d\x1d\xfe\x3c\x3b\x3d\x58\x7c\xf9\xc3\x2d\xff\xe4\xf7\xeb\x93\xdf\x56\xf9\xf7\x20\xd8\x7d\x91\xf7\xd4\x44\xd7\x5d\x6c\x66\xee\x64\x5d\xcd\x3c\x8a\xd0\x3b\x6c\xac\x10\x97\xc6\x52\xc9\xc0\xf7\xc0\xb5\xd7\xc9\x92\x6c\xc3\xeb\x65\x77\x7b\x4b\x7d\xfa\x1e\x90\x0f\x0c\xe0\x5b\xc5\x92\xa7\x2a\x4d\x41\xe3\x30\x7c\xc0\xf6\x0c\x98\x9a\xfe\x9f\xb1\xd3\x7f\x36\xac\x2c\x2e\x46\x47\x65\x99\x92\x48\xab\x89\x05\x6d\x9c\xf7\xa0\x3f\x7c\x1f\x07\x51\xcb\xa5\x2c\x69\x06\xc1\x3a\x72\x47\xcc\x94\xb4\xb0\x6b\xeb\x2c\x3b\xf5\x9f\xb0\x16\x68\x51\x17\xe8\xbc\x5b\xed\xc6\x8f\x0c\xa8\xa6\x19\x0e\x96\x98\xd0\xf7\x32\xb0\x63\x15\xbb\x52\x9b\xd5\x20\xcf\xa9\x98\x40\x3f\xc1\x8f\x9c\xb4\xde\xce\x79\x51\x86\xa4\x57\x79\x6d\xee\xb9\x35\xc7\x37\xcf\x6b\x11\xaf\xd5\x04\xb2\x65\x9e\x53\xc1\x63\x1c\x3a\x2d\x6b\xb0\x13\x2d\x9d\xb2\xab\x66\x83\xd6\xad\x76\xe3\xd7\xa1\x42\xe0\x17\x2f\x57\xa2\x15\xf7\x63\x37\x09\x87\xcd\xa2\xac\x81\xd6\x2f\x36\x5e\x92\x2d\xb3\xcd\x45\x35\xae\x24\xb3\x64\xa0\xb9\xb4\x42\xe2\xda\x58\x8f\x75\x25\xf0\x52\x52\x96\x6a\x8b\x0c\xe8\x29\x68\xd7\xce\x7a\x4c\xe4\x5d\x6a\xa9\xc0\x40\x2a\x33\x0e\x5a\x6e\xdd\x41\x4f\x39\x83\x81\xd2\xb6\x2c\x83\xf0\x46\x2a\xff\x05\x00\x00\xff\xff\x72\xe2\x78\x3a\x05\x05\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 1285, mode: os.FileMode(438), modTime: time.Unix(1647943286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelModelGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcd\x6a\xc3\x30\x10\x84\xef\x02\xbd\xc3\x20\x7c\xb0\x4b\xb1\xa1\xc7\x40\x4e\x86\xf6\x96\x53\xee\x8d\x6c\x6f\x85\x5b\xeb\x07\x59\x72\x31\x42\xef\x5e\x94\x94\x12\x0a\x39\xee\xec\xec\xb7\x33\x5d\x07\x45\x86\xbc\x0c\x34\x61\xd8\xa1\x46\xf5\xc2\x99\x93\xe3\x97\x54\x04\x6d\x27\x5a\x38\xe3\x6c\xd6\xce\xfa\x80\x9a\x33\x40\x84\x59\x93\xe0\xac\xe1\x6c\x93\x1e\xef\x38\xa2\x28\xed\xc9\x7e\x17\x6b\xd8\x1d\x21\xa5\xe8\x1c\xf9\x5e\x6a\x5a\xd0\x9e\xe5\xb0\xd0\x49\x6a\xca\x19\x6b\xf0\x71\x0c\x48\x85\x94\x12\xbc\x34\x8a\x50\xcd\xcf\xa8\x36\x1c\x8e\x68\x7b\xbb\x44\x6d\x56\xe4\x7c\x73\xdc\x71\xaa\xad\x7d\x9d\x69\x99\x72\x46\x4a\xd5\xd6\xbe\xd9\xf3\xee\x0a\xf3\x32\x0d\x07\x71\x95\x7e\xf7\x02\x9f\xab\x35\xff\xb4\x0b\xd0\x75\xb7\xcb\xde\x6a\x4d\x26\x5c\x41\x64\xa6\xf2\x2b\x97\xec\x1f\xd1\x8c\xa8\x1d\x9e\x1e\xe6\x6f\xf0\x37\xd4\x4d\x29\x33\x1b\x55\xca\x78\x0a\xd1\x1b\x88\x94\xee\xdd\x82\xb3\xfc\x13\x00\x00\xff\xff\x5b\xa6\x14\xd6\x62\x01\x00\x00")

func modelModelGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelModelGoTmpl,
		"model/model.go.tmpl",
	)
}

func modelModelGoTmpl() (*asset, error) {
	bytes, err := modelModelGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/model.go.tmpl", size: 354, mode: os.FileMode(438), modTime: time.Unix(1631248102, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api/api.go.tmpl":     apiApiGoTmpl,
	"api/gen_api.go.tmpl": apiGen_apiGoTmpl,
	"main.go.tmpl":        mainGoTmpl,
	"model/model.go.tmpl": modelModelGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api": &bintree{nil, map[string]*bintree{
		"api.go.tmpl":     &bintree{apiApiGoTmpl, map[string]*bintree{}},
		"gen_api.go.tmpl": &bintree{apiGen_apiGoTmpl, map[string]*bintree{}},
	}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"model.go.tmpl": &bintree{modelModelGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
