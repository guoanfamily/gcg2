package main

import (
  "{{.ProjectName}}/api"
"fmt"
"github.com/ilibs/gosql/v2"
"github.com/labstack/echo/v4"
"github.com/labstack/echo/v4/middleware"
_ "github.com/lib/pq"
_ "github.com/go-sql-driver/mysql"
"reflect"
)

func main(){
// Echo instance
e := echo.New()

// Middleware
e.Use(middleware.Logger())
e.Use(middleware.Recover())
e.Use(middleware.CORS())

//Common routers
e.POST("/:funcname", func(context echo.Context) error{
funcname:=context.Param("funcname")
method := reflect.ValueOf(&api.Api{}).MethodByName(funcname)
err:=method.Call([]reflect.Value{reflect.ValueOf(context)})
if !err[0].IsNil(){
fmt.Println(err[0])
}
return nil
})

// Start server
e.Logger.Fatal(e.Start(":{{.ServicePort}}"))
}

func init() {
configs := make(map[string]*gosql.Config)
configs["default"] = &gosql.Config{
Enable:  true,
Driver:  "{{.Driver}}",
Dsn:     "{{.Source}}",
ShowSql: true,
}

//connection database
gosql.Connect(configs)
gosql.QueryRowx("select 1")
}